#include <dt-bindings/zmk/mouse.h>
#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include "keys_sv.h"

#define BASE 0
#define MEDNAV 1
#define NUFU 2
#define SYM 3

&sl {
  release-after-ms = <250>;
};

&mt {
    tapping-term-ms = <200>;
    require-prior-idle-ms = <150>;
};

/ {
    chosen { zmk,matrix_transform = &five_column_transform; };

    #include "combos.dtsi"

    behaviors {
        hml: homewrow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 33 34>;
            flavor = "balanced";
            quick-tap-ms = <175>;
            require-prior-idle-ms = <125>;
            hold-trigger-on-release;
        };

        hmr: homewrow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT_HAND"; 
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31 32>;
            flavor = "balanced";
            quick-tap-ms = <175>;
            require-prior-idle-ms = <125>;
            hold-trigger-on-release;
        };
    };


    keymap {
        compatible = "zmk,keymap";
        Base {
            label = "Base";
            bindings = <
                &kp       Q  &kp       W  &kp        F  &kp        P      &kp B                &kp J         &kp        L  &kp        U  &kp       Y      &none
                &hml LSHFT A  &hml LGUI R  &hml LALT S  &hml LCTRL T      &kp G                &kp M         &hmr LCTRL N  &hmr LALT E  &hmr RGUI I      &hmr LSHFT O
                &kp Z        &kp       X  &kp        C  &kp        D      &kp V                &kp K         &kp        H  &kp SV_A_RING &kp SV_A_UMLAUT  &kp SV_O_UMLAUT
                                          &lt NUFU TAB  &lt MEDNAV SPACE  &mkp LCLK            &kp ESC       &lt SYM BSPC
            >;
        };

        MedNav  {
            label = "Media/Navigation";
            bindings = <
                &msc SCRL_LEFT    &msc SCRL_DOWN      &msc SCRL_UP             &msc SCRL_RIGHT      &none                 &kp PAGE_UP    &kp HOME  &none     &kp END  &none
                &hml LSHFT C_PREV  &hml LGUI C_VOL_DN  &hml LALT C_PLAY_PAUSE  &hml LCTRL C_VOL_UP  &kp C_NEXT            &none          &kp H     &kp J     &kp K    &kp L
                &none             &mkp MCLK           &mkp RCLK                &mkp LCLK            &msc SCRL_DOWN        &kp PAGE_DOWN  &kp LEFT  &kp DOWN  &kp UP   &kp RIGHT
                                                      &none                    &none                &none                 &kp DELETE     &kp ENTER
            >;
        };

        NuFu {
            label = "Numeral/Function";
            bindings = <
                &bt BT_CLR_ALL  &kp F7        &kp F8         &kp F9         &kp F10        &none   &kp N7         &kp N8         &kp N9        &none
                &kp LSHFT        &hml LGUI F4  &hml LALT F5  &hml LCTRL F6  &kp F11        &none   &hmr LCTRL N4  &hmr LALT N5  &hmr RGUI N6  &kp LSHFT
                &none           &kp F1        &kp F2         &kp F3         &kp F12        &none   &kp N1         &kp N2         &kp N3        &none
                                              &none          &none          &none          &none   &kp N0
            >;
        };

        Symbol {
            label = "Symbol";
            bindings = <
                &kp SV_TILDE       &kp SV_PLUS        &kp SV_LT           &kp SV_COLON        &kp SV_PRCNT        &kp SV_STAR   &kp SV_SEMI          &kp SV_GT           &kp SV_UNDER       &kp SV_HASH
                &hml LSHFT SV_LBKT  &hml LGUI SV_LBRC  &hml LALT SV_LPAR  &hml LCTRL SV_DLLR  &kp SV_GRAVE        &kp SV_EQUAL  &hmr LCTRL SV_MINUS  &hmr LALT SV_RPAR  &hmr RGUI SV_RBRC  &hmr LSHFT SV_RBKT
                &kp SV_EXCL        &kp SV_AMPS        &kp SV_SLASH        &kp SV_APOS         &kp SV_PIPE         &kp SV_CARET  &kp SV_DQT           &kp SV_BSLH         &kp SV_AT          &kp SV_QMARK
                                                      &kp COMMA           &kp DOT             &none               &none         &none
            >;
        };
    };
};
